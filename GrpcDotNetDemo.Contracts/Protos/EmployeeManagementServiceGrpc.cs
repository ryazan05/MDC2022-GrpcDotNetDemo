// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: EmployeeManagementService.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcDotNetDemo.Contracts.Grpc {
  public static partial class EmployeeManagementService
  {
    static readonly string __ServiceName = "EmployeeManagementService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeRequest> __Marshaller_GetEmployeeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeResponse> __Marshaller_GetEmployeeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesRequest> __Marshaller_GetEmployeesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesResponse> __Marshaller_GetEmployeesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeRequest> __Marshaller_CreateEmployeeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeResponse> __Marshaller_CreateEmployeeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcDotNetDemo.Contracts.Grpc.UpdateEmployeeRequest> __Marshaller_UpdateEmployeeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcDotNetDemo.Contracts.Grpc.UpdateEmployeeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcDotNetDemo.Contracts.Grpc.UpdateEmployeeResponse> __Marshaller_UpdateEmployeeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcDotNetDemo.Contracts.Grpc.UpdateEmployeeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcDotNetDemo.Contracts.Grpc.DeleteEmployeeRequest> __Marshaller_DeleteEmployeeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcDotNetDemo.Contracts.Grpc.DeleteEmployeeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcDotNetDemo.Contracts.Grpc.DeleteEmployeeResponse> __Marshaller_DeleteEmployeeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcDotNetDemo.Contracts.Grpc.DeleteEmployeeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcDotNetDemo.Contracts.Grpc.BulkCreateEmployeeResponse> __Marshaller_BulkCreateEmployeeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcDotNetDemo.Contracts.Grpc.BulkCreateEmployeeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcDotNetDemo.Contracts.Grpc.GetTokenRequest> __Marshaller_GetTokenRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcDotNetDemo.Contracts.Grpc.GetTokenRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcDotNetDemo.Contracts.Grpc.GetTokenResponse> __Marshaller_GetTokenResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcDotNetDemo.Contracts.Grpc.GetTokenResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeRequest, global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeResponse> __Method_GetEmployee = new grpc::Method<global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeRequest, global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEmployee",
        __Marshaller_GetEmployeeRequest,
        __Marshaller_GetEmployeeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesRequest, global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesResponse> __Method_GetEmployees = new grpc::Method<global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesRequest, global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEmployees",
        __Marshaller_GetEmployeesRequest,
        __Marshaller_GetEmployeesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeRequest, global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeResponse> __Method_CreateEmployee = new grpc::Method<global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeRequest, global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateEmployee",
        __Marshaller_CreateEmployeeRequest,
        __Marshaller_CreateEmployeeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcDotNetDemo.Contracts.Grpc.UpdateEmployeeRequest, global::GrpcDotNetDemo.Contracts.Grpc.UpdateEmployeeResponse> __Method_UpdateEmployee = new grpc::Method<global::GrpcDotNetDemo.Contracts.Grpc.UpdateEmployeeRequest, global::GrpcDotNetDemo.Contracts.Grpc.UpdateEmployeeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateEmployee",
        __Marshaller_UpdateEmployeeRequest,
        __Marshaller_UpdateEmployeeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcDotNetDemo.Contracts.Grpc.DeleteEmployeeRequest, global::GrpcDotNetDemo.Contracts.Grpc.DeleteEmployeeResponse> __Method_DeleteEmployee = new grpc::Method<global::GrpcDotNetDemo.Contracts.Grpc.DeleteEmployeeRequest, global::GrpcDotNetDemo.Contracts.Grpc.DeleteEmployeeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteEmployee",
        __Marshaller_DeleteEmployeeRequest,
        __Marshaller_DeleteEmployeeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesRequest, global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeResponse> __Method_GetEmployeesStreaming = new grpc::Method<global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesRequest, global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetEmployeesStreaming",
        __Marshaller_GetEmployeesRequest,
        __Marshaller_GetEmployeeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeRequest, global::GrpcDotNetDemo.Contracts.Grpc.BulkCreateEmployeeResponse> __Method_BulkCreateEmployeesClientStreaming = new grpc::Method<global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeRequest, global::GrpcDotNetDemo.Contracts.Grpc.BulkCreateEmployeeResponse>(
        grpc::MethodType.ClientStreaming,
        __ServiceName,
        "BulkCreateEmployeesClientStreaming",
        __Marshaller_CreateEmployeeRequest,
        __Marshaller_BulkCreateEmployeeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeRequest, global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeResponse> __Method_BulkCreateEmployeesBidirectionalStreaming = new grpc::Method<global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeRequest, global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeResponse>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "BulkCreateEmployeesBidirectionalStreaming",
        __Marshaller_CreateEmployeeRequest,
        __Marshaller_CreateEmployeeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcDotNetDemo.Contracts.Grpc.GetTokenRequest, global::GrpcDotNetDemo.Contracts.Grpc.GetTokenResponse> __Method_GetToken = new grpc::Method<global::GrpcDotNetDemo.Contracts.Grpc.GetTokenRequest, global::GrpcDotNetDemo.Contracts.Grpc.GetTokenResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetToken",
        __Marshaller_GetTokenRequest,
        __Marshaller_GetTokenResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcDotNetDemo.Contracts.Grpc.EmployeeManagementServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of EmployeeManagementService</summary>
    [grpc::BindServiceMethod(typeof(EmployeeManagementService), "BindService")]
    public abstract partial class EmployeeManagementServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeResponse> GetEmployee(global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesResponse> GetEmployees(global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeResponse> CreateEmployee(global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcDotNetDemo.Contracts.Grpc.UpdateEmployeeResponse> UpdateEmployee(global::GrpcDotNetDemo.Contracts.Grpc.UpdateEmployeeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcDotNetDemo.Contracts.Grpc.DeleteEmployeeResponse> DeleteEmployee(global::GrpcDotNetDemo.Contracts.Grpc.DeleteEmployeeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// --- Streaming ---
      /// Server
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task GetEmployeesStreaming(global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesRequest request, grpc::IServerStreamWriter<global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// --- Streaming ---
      /// Client
      /// </summary>
      /// <param name="requestStream">Used for reading requests from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcDotNetDemo.Contracts.Grpc.BulkCreateEmployeeResponse> BulkCreateEmployeesClientStreaming(grpc::IAsyncStreamReader<global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeRequest> requestStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// --- Streaming ---
      /// Bi-directional
      /// </summary>
      /// <param name="requestStream">Used for reading requests from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task BulkCreateEmployeesBidirectionalStreaming(grpc::IAsyncStreamReader<global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeRequest> requestStream, grpc::IServerStreamWriter<global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcDotNetDemo.Contracts.Grpc.GetTokenResponse> GetToken(global::GrpcDotNetDemo.Contracts.Grpc.GetTokenRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for EmployeeManagementService</summary>
    public partial class EmployeeManagementServiceClient : grpc::ClientBase<EmployeeManagementServiceClient>
    {
      /// <summary>Creates a new client for EmployeeManagementService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public EmployeeManagementServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for EmployeeManagementService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public EmployeeManagementServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected EmployeeManagementServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected EmployeeManagementServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeResponse GetEmployee(global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEmployee(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeResponse GetEmployee(global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEmployee, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeResponse> GetEmployeeAsync(global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEmployeeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeResponse> GetEmployeeAsync(global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEmployee, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesResponse GetEmployees(global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEmployees(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesResponse GetEmployees(global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEmployees, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesResponse> GetEmployeesAsync(global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEmployeesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesResponse> GetEmployeesAsync(global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEmployees, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeResponse CreateEmployee(global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEmployee(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeResponse CreateEmployee(global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateEmployee, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeResponse> CreateEmployeeAsync(global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEmployeeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeResponse> CreateEmployeeAsync(global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateEmployee, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcDotNetDemo.Contracts.Grpc.UpdateEmployeeResponse UpdateEmployee(global::GrpcDotNetDemo.Contracts.Grpc.UpdateEmployeeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEmployee(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcDotNetDemo.Contracts.Grpc.UpdateEmployeeResponse UpdateEmployee(global::GrpcDotNetDemo.Contracts.Grpc.UpdateEmployeeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateEmployee, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcDotNetDemo.Contracts.Grpc.UpdateEmployeeResponse> UpdateEmployeeAsync(global::GrpcDotNetDemo.Contracts.Grpc.UpdateEmployeeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEmployeeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcDotNetDemo.Contracts.Grpc.UpdateEmployeeResponse> UpdateEmployeeAsync(global::GrpcDotNetDemo.Contracts.Grpc.UpdateEmployeeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateEmployee, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcDotNetDemo.Contracts.Grpc.DeleteEmployeeResponse DeleteEmployee(global::GrpcDotNetDemo.Contracts.Grpc.DeleteEmployeeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteEmployee(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcDotNetDemo.Contracts.Grpc.DeleteEmployeeResponse DeleteEmployee(global::GrpcDotNetDemo.Contracts.Grpc.DeleteEmployeeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteEmployee, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcDotNetDemo.Contracts.Grpc.DeleteEmployeeResponse> DeleteEmployeeAsync(global::GrpcDotNetDemo.Contracts.Grpc.DeleteEmployeeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteEmployeeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcDotNetDemo.Contracts.Grpc.DeleteEmployeeResponse> DeleteEmployeeAsync(global::GrpcDotNetDemo.Contracts.Grpc.DeleteEmployeeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteEmployee, null, options, request);
      }
      /// <summary>
      /// --- Streaming ---
      /// Server
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeResponse> GetEmployeesStreaming(global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEmployeesStreaming(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// --- Streaming ---
      /// Server
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeResponse> GetEmployeesStreaming(global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetEmployeesStreaming, null, options, request);
      }
      /// <summary>
      /// --- Streaming ---
      /// Client
      /// </summary>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncClientStreamingCall<global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeRequest, global::GrpcDotNetDemo.Contracts.Grpc.BulkCreateEmployeeResponse> BulkCreateEmployeesClientStreaming(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BulkCreateEmployeesClientStreaming(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// --- Streaming ---
      /// Client
      /// </summary>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncClientStreamingCall<global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeRequest, global::GrpcDotNetDemo.Contracts.Grpc.BulkCreateEmployeeResponse> BulkCreateEmployeesClientStreaming(grpc::CallOptions options)
      {
        return CallInvoker.AsyncClientStreamingCall(__Method_BulkCreateEmployeesClientStreaming, null, options);
      }
      /// <summary>
      /// --- Streaming ---
      /// Bi-directional
      /// </summary>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeRequest, global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeResponse> BulkCreateEmployeesBidirectionalStreaming(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BulkCreateEmployeesBidirectionalStreaming(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// --- Streaming ---
      /// Bi-directional
      /// </summary>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeRequest, global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeResponse> BulkCreateEmployeesBidirectionalStreaming(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_BulkCreateEmployeesBidirectionalStreaming, null, options);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcDotNetDemo.Contracts.Grpc.GetTokenResponse GetToken(global::GrpcDotNetDemo.Contracts.Grpc.GetTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetToken(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcDotNetDemo.Contracts.Grpc.GetTokenResponse GetToken(global::GrpcDotNetDemo.Contracts.Grpc.GetTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetToken, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcDotNetDemo.Contracts.Grpc.GetTokenResponse> GetTokenAsync(global::GrpcDotNetDemo.Contracts.Grpc.GetTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTokenAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcDotNetDemo.Contracts.Grpc.GetTokenResponse> GetTokenAsync(global::GrpcDotNetDemo.Contracts.Grpc.GetTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetToken, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override EmployeeManagementServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new EmployeeManagementServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(EmployeeManagementServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetEmployee, serviceImpl.GetEmployee)
          .AddMethod(__Method_GetEmployees, serviceImpl.GetEmployees)
          .AddMethod(__Method_CreateEmployee, serviceImpl.CreateEmployee)
          .AddMethod(__Method_UpdateEmployee, serviceImpl.UpdateEmployee)
          .AddMethod(__Method_DeleteEmployee, serviceImpl.DeleteEmployee)
          .AddMethod(__Method_GetEmployeesStreaming, serviceImpl.GetEmployeesStreaming)
          .AddMethod(__Method_BulkCreateEmployeesClientStreaming, serviceImpl.BulkCreateEmployeesClientStreaming)
          .AddMethod(__Method_BulkCreateEmployeesBidirectionalStreaming, serviceImpl.BulkCreateEmployeesBidirectionalStreaming)
          .AddMethod(__Method_GetToken, serviceImpl.GetToken).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, EmployeeManagementServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetEmployee, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeRequest, global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeResponse>(serviceImpl.GetEmployee));
      serviceBinder.AddMethod(__Method_GetEmployees, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesRequest, global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesResponse>(serviceImpl.GetEmployees));
      serviceBinder.AddMethod(__Method_CreateEmployee, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeRequest, global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeResponse>(serviceImpl.CreateEmployee));
      serviceBinder.AddMethod(__Method_UpdateEmployee, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcDotNetDemo.Contracts.Grpc.UpdateEmployeeRequest, global::GrpcDotNetDemo.Contracts.Grpc.UpdateEmployeeResponse>(serviceImpl.UpdateEmployee));
      serviceBinder.AddMethod(__Method_DeleteEmployee, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcDotNetDemo.Contracts.Grpc.DeleteEmployeeRequest, global::GrpcDotNetDemo.Contracts.Grpc.DeleteEmployeeResponse>(serviceImpl.DeleteEmployee));
      serviceBinder.AddMethod(__Method_GetEmployeesStreaming, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeesRequest, global::GrpcDotNetDemo.Contracts.Grpc.GetEmployeeResponse>(serviceImpl.GetEmployeesStreaming));
      serviceBinder.AddMethod(__Method_BulkCreateEmployeesClientStreaming, serviceImpl == null ? null : new grpc::ClientStreamingServerMethod<global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeRequest, global::GrpcDotNetDemo.Contracts.Grpc.BulkCreateEmployeeResponse>(serviceImpl.BulkCreateEmployeesClientStreaming));
      serviceBinder.AddMethod(__Method_BulkCreateEmployeesBidirectionalStreaming, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeRequest, global::GrpcDotNetDemo.Contracts.Grpc.CreateEmployeeResponse>(serviceImpl.BulkCreateEmployeesBidirectionalStreaming));
      serviceBinder.AddMethod(__Method_GetToken, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcDotNetDemo.Contracts.Grpc.GetTokenRequest, global::GrpcDotNetDemo.Contracts.Grpc.GetTokenResponse>(serviceImpl.GetToken));
    }

  }
}
#endregion
